CURIOUSITY, A DRIVE FOR INNOVATION & A KEEN EYE FOR DETAIL:
***********************************************************

https://github.com/john-smilga/react-course-v3


1. npm create vite@latest
2. rafce -> arrow func with export\rfce - regular func with export
3. npm i react-router-dom
4. npm install -g typescript -> To install TypeScript Globally
5. npm install @reduxjs/toolkit react-redux
7. https://panda-css.com/
8. www.typescriptlang.org
9. https://getbootstrap.com/ --> Bootstrap website
10. https://icons.getbootstrap.com/ --> Bootstrap Icons


Diffing Algo -> React Algorithm
[Reconcialiation Process]
Prop drilling -> It is hard to maintain.

Context API (The problem is always keep on wrapping your app component in every context that you create)

Redux => Global State Management Library [Store - multiple states, Reducer is more like a repository, Action]



TYPESCRIPT:
***********
 a) Converting TypeScript Code to JavaScript Code is known as [Transpiling] => Translating/Transpiling.
    Transpiling is accomplished by tsc command.
	
 b) tsc --noEmitOnError filename.ts 
 c) tsc --init // To generate a tsconfig.json file
 d) tsc --build --clean
 e) npx create-react-app my-app --template typescript --> To create a react TypeScript project
 f) npm install --save typescript @types/node @types/react @types/react-dom @types/jest  --> To integrate TypeScript with React
 g) npx tsc --init  --> To initialize TypeScript in the tsconfig.json


EXTENSION:
**********
a) Auto Rename Tag
b) Highlight Matching Tag
c) ES7 React/Redux/GraphQL/React-Native Snippet
d) Emmet




INTEGRATING OKTA/OAuth2/OIDC TO REACT APP:
******************************************
=> AuditTTRS@2024!
testuser@email.com | Qwerty@123!
a) npm install @okta/okta-signin-widget  --> Okta Signin Widget
b) npm install @okta/okta-react --> Okta React SDK
c) npm list @okta/okta-signin-widget




REACT PERFORMANCE OPTIMIZATION:
*******************************






#### AXIOS Library:
*******************

- import axios

- axios.get(url)
- axios.post(url)
- axios.patch/put(url)
- axios.delete(url)

- default get axios(url)

- returns a promise
- response data located in data property
- error in error.response

